{
    "docs": [
        {
            "location": "/", 
            "text": "Intro\n\n\nAjaxUpload is an extra package for MODx Revolution. It displays an upload button for uploading multiple files with \nprogress counter. The upload queue could be filled and saved by Formit hooks. The uploaded files could be attached to \nthe FormIt mails.\n\n\nRequirements\n\n\n\n\nMODX Revolution 2.2.0+\n\n\nPHP v5.3+\n\n\n\n\nFeatures\n\n\nWith the snippet an upload button for uploading multiple files with progress counter is generated. Works well \nin FF3.6+, Safari4+, Chrome and falls back to hidden iframe based upload in other browsers, providing good user\nexperience everywhere.\n\n\nAll uploaded files and generated thumbnails are given random filenames to avoid hotlinking uploaded not published \nfiles. Automatic thumbnail generation for uploaded jpeg, png and gif files. Other uploaded files will get a \ngeneric icon the file extension.\n\n\nWith two FormIt hooks the upload queue could be pre filled from a FormIt field value and be saved into a FormIt \nfield value. With a third FormIt hook the uploaded files could be attached to the FormIt mails.\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 14]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Home"
        }, 
        {
            "location": "/#intro", 
            "text": "AjaxUpload is an extra package for MODx Revolution. It displays an upload button for uploading multiple files with \nprogress counter. The upload queue could be filled and saved by Formit hooks. The uploaded files could be attached to \nthe FormIt mails.", 
            "title": "Intro"
        }, 
        {
            "location": "/#requirements", 
            "text": "MODX Revolution 2.2.0+  PHP v5.3+", 
            "title": "Requirements"
        }, 
        {
            "location": "/#features", 
            "text": "With the snippet an upload button for uploading multiple files with progress counter is generated. Works well \nin FF3.6+, Safari4+, Chrome and falls back to hidden iframe based upload in other browsers, providing good user\nexperience everywhere.  All uploaded files and generated thumbnails are given random filenames to avoid hotlinking uploaded not published \nfiles. Automatic thumbnail generation for uploaded jpeg, png and gif files. Other uploaded files will get a \ngeneric icon the file extension.  With two FormIt hooks the upload queue could be pre filled from a FormIt field value and be saved into a FormIt \nfield value. With a third FormIt hook the uploaded files could be attached to the FormIt mails.   \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 14]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Features"
        }, 
        {
            "location": "/installation/", 
            "text": "Install from MODX Extras\n\n\nSearch for AjaxUpload in the Package Manager of a MODX installation and install it in there.\n\n\nManual installation\n\n\nIf you can't access the MODX Extras Repository in your MODX installation, you can manually install AjaxUpload.\n\n\n\n\nDownload the transport package from \nMODX Extras\n\n  (or one of the pre built transport packages in \n_packages\n)\n\n\nUpload the zip file to your MODX installation's \ncore/packages\n folder.\n\n\nIn the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown \n  button.\n\n\nAjaxUpload should now show up in the list of available packages. Click the corresponding 'Install' button and follow \n  instructions to complete the installation.\n\n\n\n\nBuild it from source\n\n\nTo build and install the package from source you could use \nGit Package Management\n. \nThe GitHub repository of AjaxUpload contains a \nconfig.json\n \nto build that package locally. Use this option, if you want to debug AjaxUpload and/or contribute bugfixes and enhancements.\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 14]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#install-from-modx-extras", 
            "text": "Search for AjaxUpload in the Package Manager of a MODX installation and install it in there.", 
            "title": "Install from MODX Extras"
        }, 
        {
            "location": "/installation/#manual-installation", 
            "text": "If you can't access the MODX Extras Repository in your MODX installation, you can manually install AjaxUpload.   Download the transport package from  MODX Extras \n  (or one of the pre built transport packages in  _packages )  Upload the zip file to your MODX installation's  core/packages  folder.  In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown \n  button.  AjaxUpload should now show up in the list of available packages. Click the corresponding 'Install' button and follow \n  instructions to complete the installation.", 
            "title": "Manual installation"
        }, 
        {
            "location": "/installation/#build-it-from-source", 
            "text": "To build and install the package from source you could use  Git Package Management . \nThe GitHub repository of AjaxUpload contains a  config.json  \nto build that package locally. Use this option, if you want to debug AjaxUpload and/or contribute bugfixes and enhancements.   \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 14]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Build it from source"
        }, 
        {
            "location": "/usage/", 
            "text": "Display the Upload Button\n\n\nTo display the upload button, you have to insert the AjaxUpload snippet call somewhere in a Resource. If you want to \nuse it with FormIt, you should place the snippet call in the FormIt form:\n\n\n[[!AjaxUpload?\n\nuid=`image`\n\nallowedExtensions=`jpg,jpeg,png,gif`\n\nthumbX=`75`\n\nthumbY=`75`\n]]\n\n\n\n\nThe AjaxUpload snippet could use the following properties:\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nuid\n\n\nUnique upload queue id \n1\n\n\nmd5 of MODX 'site_url' setting and the current resource id\n\n\n\n\n\n\nlanguage\n\n\nSnippet/Javascript language\n\n\n-\n\n\n\n\n\n\nallowedExtensions\n\n\nAllowed file extensions for upload\n\n\njpg,jpeg,png,gif\n\n\n\n\n\n\nmaxFilesizeMb\n\n\nMaximum size for one file to upload\n\n\n8\n\n\n\n\n\n\nmaxFiles\n\n\nMaximum count of files to upload\n\n\n3\n\n\n\n\n\n\nthumbX\n\n\nHorizontal size of generated thumb\n\n\n100\n\n\n\n\n\n\nthumbY\n\n\nVertical size of generated thumb\n\n\n100\n\n\n\n\n\n\naddJquery\n\n\nAdd jQuery script at the end of the body\n\n\nNo\n\n\n\n\n\n\naddJscript\n\n\nAdd the snippet javascript and the fileuploader script at the end of the body\n\n\nYes\n\n\n\n\n\n\naddCss\n\n\nAdd the snippet css ad the end of the head\n\n\nYes\n\n\n\n\n\n\n\n\nIf you want to change the text output in the upload section (i.e. the upload button), you have to edit the MODX lexicon in the ajaxupload namespace.\n\n\nFormIt Hooks\n\n\nTo set/retreive the uploaded images in the upload queue by FormIt, you have to use the FormIt hooks in the FormIt call:\n\n\n[[!FormIt?\n...\n\npreHooks=`Formit2AjaxUpload`\n\nhooks=`AjaxUpload2Formit`\n\najaxuploadFieldname=`image`\n\najaxuploadTarget=`images/user/`\n\najaxuploadUid=`image`\n...\n]]\n\n\n\n\nThe AjaxUpload2Formit and the Formit2AjaxUpload hook use almost the same properties:\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\najaxuploadUid\n\n\nUnique upload queue id \n1\n\n\nmd5 of MODX site_url setting and the current resource id\n\n\n\n\n\n\najaxuploadFieldname\n\n\n(required) FormIt field, the filenames/paths of the (already) uploaded files are saved in\n\n\njpg,jpeg,png,gif\n\n\n\n\n\n\najaxuploadTarget\n\n\n(required) Target path for the (already) uploaded files (relative to $modx-\ngetOption['assetsPath']). The folder should exist or should be createable and it has to be writable for PHP.\n\n\n-\n\n\n\n\n\n\najaxuploadFieldformat\n\n\nFormat of the data saved in ajaxuploadFieldname\n\n\ncsv\n\n\n\n\n\n\n\n\nThe AjaxUpload2Formit hook uses additional properties:\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\najaxuploadClearQueue\n\n\nClear the upload queue after a sucessful run of the hook\n\n\nfalse\n\n\n\n\n\n\najaxuploadAllowOverwrite\n\n\nAllow overwrite of existing files with the same filename\n\n\nfalse\n\n\n\n\n\n\n\n\nFormIt Attachments\n\n\nIf you want to attach the uploaded files to the email, you have to add the\nAjaxUploadAttachments hook to the FormIt Call before the email hook:\n\n\n[[!FormIt?\n...\n\nhooks=`AjaxUpload2Formit,AjaxUploadAttachments,email`\n]]\n\n\n\n\nThe AjaxUploadAttachments hook uses the properties of the hooks above.\n\n\nSystem Settings\n\n\nAjaxUpload uses the following system settings in the namespace \najaxupload\n:\n\n\n\n\n\n\n\n\nKey\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\najaxupload.cache_expires\n\n\nExpire Time of the AjaxUpload cache (in hours)\n\n\n4\n\n\n\n\n\n\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 13]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe parameter uid should be set different for each upload button on the site to separate multiple upload queues.", 
            "title": "Usage"
        }, 
        {
            "location": "/usage/#display-the-upload-button", 
            "text": "To display the upload button, you have to insert the AjaxUpload snippet call somewhere in a Resource. If you want to \nuse it with FormIt, you should place the snippet call in the FormIt form:  [[!AjaxUpload? uid=`image` allowedExtensions=`jpg,jpeg,png,gif` thumbX=`75` thumbY=`75`\n]]  The AjaxUpload snippet could use the following properties:     Property  Description  Default      uid  Unique upload queue id  1  md5 of MODX 'site_url' setting and the current resource id    language  Snippet/Javascript language  -    allowedExtensions  Allowed file extensions for upload  jpg,jpeg,png,gif    maxFilesizeMb  Maximum size for one file to upload  8    maxFiles  Maximum count of files to upload  3    thumbX  Horizontal size of generated thumb  100    thumbY  Vertical size of generated thumb  100    addJquery  Add jQuery script at the end of the body  No    addJscript  Add the snippet javascript and the fileuploader script at the end of the body  Yes    addCss  Add the snippet css ad the end of the head  Yes     If you want to change the text output in the upload section (i.e. the upload button), you have to edit the MODX lexicon in the ajaxupload namespace.", 
            "title": "Display the Upload Button"
        }, 
        {
            "location": "/usage/#formit-hooks", 
            "text": "To set/retreive the uploaded images in the upload queue by FormIt, you have to use the FormIt hooks in the FormIt call:  [[!FormIt?\n... preHooks=`Formit2AjaxUpload` hooks=`AjaxUpload2Formit` ajaxuploadFieldname=`image` ajaxuploadTarget=`images/user/` ajaxuploadUid=`image`\n...\n]]  The AjaxUpload2Formit and the Formit2AjaxUpload hook use almost the same properties:     Property  Description  Default      ajaxuploadUid  Unique upload queue id  1  md5 of MODX site_url setting and the current resource id    ajaxuploadFieldname  (required) FormIt field, the filenames/paths of the (already) uploaded files are saved in  jpg,jpeg,png,gif    ajaxuploadTarget  (required) Target path for the (already) uploaded files (relative to $modx- getOption['assetsPath']). The folder should exist or should be createable and it has to be writable for PHP.  -    ajaxuploadFieldformat  Format of the data saved in ajaxuploadFieldname  csv     The AjaxUpload2Formit hook uses additional properties:     Property  Description  Default      ajaxuploadClearQueue  Clear the upload queue after a sucessful run of the hook  false    ajaxuploadAllowOverwrite  Allow overwrite of existing files with the same filename  false", 
            "title": "FormIt Hooks"
        }, 
        {
            "location": "/usage/#formit-attachments", 
            "text": "If you want to attach the uploaded files to the email, you have to add the\nAjaxUploadAttachments hook to the FormIt Call before the email hook:  [[!FormIt?\n... hooks=`AjaxUpload2Formit,AjaxUploadAttachments,email`\n]]  The AjaxUploadAttachments hook uses the properties of the hooks above.", 
            "title": "FormIt Attachments"
        }, 
        {
            "location": "/usage/#system-settings", 
            "text": "AjaxUpload uses the following system settings in the namespace  ajaxupload :     Key  Description  Default      ajaxupload.cache_expires  Expire Time of the AjaxUpload cache (in hours)  4      \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 13]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();        The parameter uid should be set different for each upload button on the site to separate multiple upload queues.", 
            "title": "System Settings"
        }, 
        {
            "location": "/contributors/", 
            "text": "Contributors\n\n\nThe AjaxUpload project was started in 2012 by \nThomas Jakobi\n.\n\n\nMany thanks to everyone, who has contributed to this project:\n\n\n\n\n@bugakov\n\n\n@Jo\n\n\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 13]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Contributors"
        }, 
        {
            "location": "/contributors/#contributors", 
            "text": "The AjaxUpload project was started in 2012 by  Thomas Jakobi .  Many thanks to everyone, who has contributed to this project:   @bugakov  @Jo    \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 13]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Contributors"
        }, 
        {
            "location": "/donate/", 
            "text": "Support AjaxUpload\n\n\nAjaxUpload\n is and always will be free and open-source, but it still requires many man-hours of development, \nbug-fixing, support in MODX forums and on GitHub between the releases.\n\n\nPlease support the ongoing and past development of \nAjaxUpload\n by making a donation below.\n\n\nDonate for AjaxUpload:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 13]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Donate"
        }, 
        {
            "location": "/donate/#support-ajaxupload", 
            "text": "AjaxUpload  is and always will be free and open-source, but it still requires many man-hours of development, \nbug-fixing, support in MODX forums and on GitHub between the releases.  Please support the ongoing and past development of  AjaxUpload  by making a donation below.  Donate for AjaxUpload:          \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 13]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Support AjaxUpload"
        }
    ]
}